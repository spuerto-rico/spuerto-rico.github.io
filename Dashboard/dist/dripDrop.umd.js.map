{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///dripDrop.umd.js","webpack:///webpack/bootstrap 53776c87b264600cb920","webpack:///./drip-drop/drip-drop.js","webpack:///./drip-drop/drop.js","webpack:///./drip-drop/drag.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","drop","drag","dontPreventDefault","document","removeEventListener","docEnterHandler","docOverHandler","ghostItem","domNode","zIndex","undefined","aClone","cloneNode","style","position","top","width","clientWidth","opacity","pointerEvents","moveAbsoluteNode","node","x","y","left","addEventListener","e","preventDefault","readTextFile","file","type","cb","reader","FileReader","onloadend","target","readyState","DONE","result","onerror","buildDataObject","dt","data","files","length","Files","j","types","n","getText","getBuffer","attachGetter","mappedType","mapToCamelCase","Object","defineProperty","enumerable","get","getData","string","replace","match","submatch","toUpperCase","options","allow","allowed","isAllowed","indexOf","curTypes","dropInfo","dragCounter","enter","dataTransfer","keys","move","recentMousePos","stopPropCalled","dropEffect","over","originalStopProp","stopPropagation","pageX","pageY","leave","out","start","docover","end","mapFromCamelCase","toLowerCase","setAttribute","dragInfo","image","Image","setDragImage","height","effectAllowed","setData","docOver","dragendHandler"],"mappings":"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","file":"dripDrop.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dripDrop\"] = factory();\n\telse\n\t\troot[\"dripDrop\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dripDrop\"] = factory();\n\telse\n\t\troot[\"dripDrop\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports.drop = __webpack_require__(1)\r\n\texports.drag = __webpack_require__(2)\r\n\t\r\n\texports.dontPreventDefault = function() {\r\n\t    document.removeEventListener('dragenter', docEnterHandler, true)\r\n\t    document.removeEventListener('dragover', docOverHandler, true)\r\n\t}\r\n\t\r\n\t\r\n\t// returns an opaque clone of the passed dom node ready to be moved with moveToMouse\r\n\texports.ghostItem = function(domNode, zIndex) {\r\n\t    if(zIndex === undefined) zIndex = 1000\r\n\t\r\n\t    var aClone = domNode.cloneNode(true)\r\n\t    aClone.style.position = 'absolute'\r\n\t    aClone.style.top = '-100px'\r\n\t    aClone.style.width = domNode.clientWidth+'px'\r\n\t    aClone.style.opacity = '.6'\r\n\t    aClone.style.pointerEvents = 'none' // makes this 'invisible' to mouse events so it doesn't block mouse events while you're dragging it around\r\n\t    aClone.style['z-index'] = zIndex\r\n\t\r\n\t    return aClone\r\n\t}\r\n\t// moves an absolutely positioned element to the position by x and y\r\n\texports.moveAbsoluteNode = function(node, x, y) {\r\n\t    node.style.left = x+'px'\r\n\t    node.style.top = y+'px'\r\n\t}\r\n\t\r\n\t// get rid of the need to do this for other drag events\r\n\tvar docEnterHandler, docOverHandler;\r\n\tdocument.addEventListener('dragenter',docEnterHandler=function(e){\r\n\t    e.preventDefault()\r\n\t}, true)\r\n\tdocument.addEventListener('dragover',docOverHandler=function(e){\r\n\t    e.preventDefault()\r\n\t}, true)\r\n\t//document.addEventListener('dragstart',docOverHandler=function(e){\r\n\t//    e.preventDefault()\r\n\t//})\r\n\t\r\n\t\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t// node - The node to set up as a drop zone\r\n\t// options - An object with the optional members:\r\n\t    // allow - A list of types to allow the event handlers be called for.\r\n\t            // If this is passed and the current drag operation doesn't have an allowed type, the handlers will not be called.\r\n\t            // If this isn't passed, all types are allowed.\r\n\t    // enter(types, e) - A function called when a drag action enters the node\r\n\t        // types - The data types available on drop\r\n\t    // move(types, e) - A function called with the dragging pointer moves over the node\r\n\t        // IMPORTANT: 'data' will contain the correct keys, but will *not* actually contain any data. Blame the stupid html5 drag and drop api.\r\n\t    // leave(types, e) - A function called with the dragging pointer moves out of the node\r\n\t    // in(types, e) - A function called when the dragging pointer crosses in over a child-boundary of a descendant node that is also a drop zone \r\n\t    // out(types, e) - A function called when the dragging pointer crosses out over a child-boundary of a descendant node that is also a drop zone\r\n\t    // drop(data, e) - A function called when the dragging pointer releases above the node\r\n\t        // data - An object where each key is a data type, where if that type contains dashes, the type will be available as is *and* with dash-lowercase converted to camel case\r\n\t            // The value is either:\r\n\t             // For the 'Files' type, the value is a list of files, each with a set of properties described here: https://developer.mozilla.org/en-US/docs/Web/API/File .\r\n\t              // In addition, the files have the methods:\r\n\t                // getText(errback) - Returns the text of the file in a call to the the errback\r\n\t                // getBuffer(errback) - Returns a Buffer of the file contents in a call to the the errback\r\n\t             // For any other type, the value is a string of data in a format depending on the type\r\n\tvar drop = module.exports = function(node, options) {\r\n\t    if(options.allow) {\r\n\t        var allowed = options.allow\r\n\t        var isAllowed = function(types) {\r\n\t            for(var n=0; n<allowed.length; n++) {\r\n\t                if(types.indexOf(allowed[n]) !== -1) {\r\n\t                    return true\r\n\t                }\r\n\t            }\r\n\t            return false\r\n\t        }\r\n\t    } else {\r\n\t        var isAllowed = function() {\r\n\t            return true\r\n\t        }\r\n\t    }\r\n\t\r\n\t    var dropInfo = {node:node}, curTypes, dragCounter = 0\r\n\t    node.addEventListener('dragenter', dropInfo.enter = function(e) {\r\n\t        dragCounter++\r\n\t        if(dragCounter === 1) { // browsers stupidly emits dragenter whenever crossing over a child boundary..\r\n\t            var data = buildDataObject(e.dataTransfer)\r\n\t            curTypes = Object.keys(data)\r\n\t            if(options.enter !== undefined && isAllowed(curTypes)) {\r\n\t                options.enter(curTypes,e)\r\n\t            }\r\n\t        } else if(options.in) {\r\n\t            options.in(curTypes, e)\r\n\t        }\r\n\t    })\r\n\t    if(options.move) {\r\n\t        var recentMousePos, dropEffect = 'copy', stopPropCalled;\r\n\t        node.addEventListener('dragover', dropInfo.over = function(e) {\r\n\t            var originalStopProp = e.stopPropagation\r\n\t            e.stopPropagation = function() {\r\n\t                stopPropCalled = true\r\n\t            }\r\n\t            \r\n\t            if(recentMousePos === undefined || e.pageX !== recentMousePos.x || e.pageY !== recentMousePos.y) {\r\n\t                recentMousePos = {x:e.pageX,  y:e.pageY}\r\n\t                if(isAllowed(curTypes)) {\r\n\t                    stopPropCalled = false\r\n\t                    dropEffect = options.move(curTypes, e)\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if(dropEffect) e.dataTransfer.dropEffect=dropEffect\r\n\t            if(stopPropCalled) {\r\n\t                originalStopProp.call(e)\r\n\t            }\r\n\t        })\r\n\t    }\r\n\t\r\n\t    node.addEventListener('dragleave', dropInfo.leave = function(e) {\r\n\t        dragCounter--\r\n\t        if(dragCounter === 0) { // browsers stupidly emits dragleave whenever crossing over a child boundary..\r\n\t            if(options.leave && isAllowed(curTypes))\r\n\t                options.leave(curTypes,e)\r\n\t        } else if(options.out) {\r\n\t            options.out(curTypes, e)\r\n\t        }\r\n\t    })\r\n\t    if(options.drop) {\r\n\t        node.addEventListener('drop', dropInfo.drop = function(e) {\r\n\t            e.preventDefault()\r\n\t            if(isAllowed(curTypes)) {\r\n\t                var data = buildDataObject(e.dataTransfer)\r\n\t                options.drop(data, e)\r\n\t            }\r\n\t\r\n\t            dragCounter=0 // reset\r\n\t        })\r\n\t    }\r\n\t\r\n\t    return function(dropInfo) {\r\n\t        if(dropInfo.enter) dropInfo.node.removeEventListener('dragstart', dropInfo.start)\r\n\t        if(dropInfo.move) document.removeEventListener('dragover', dropInfo.docover)\r\n\t        if(dropInfo.leave) dropInfo.node.removeEventListener('dragend', dropInfo.end)\r\n\t        if(dropInfo.drop) dropInfo.node.removeEventListener('drop', dropInfo.drop)\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction readTextFile(file, type, cb){\r\n\t    var reader=new FileReader()\r\n\t    reader.onloadend=function(e) {\r\n\t        if(e.target.readyState==FileReader.DONE){\r\n\t            cb(undefined, reader.result)\r\n\t        }\r\n\t    }\r\n\t    reader.onerror = function(e) {\r\n\t        cb(e)\r\n\t    }\r\n\t    reader[type](file)\r\n\t}\r\n\t\r\n\tfunction buildDataObject(dt) {\r\n\t    var data = {}\r\n\t    if(dt.files.length > 0) {\r\n\t        data.Files = dt.files\r\n\t    }\r\n\t    for(var j=0; j<dt.types.length; j++) {\r\n\t        var type = dt.types[j]\r\n\t        if(type === 'Files') {\r\n\t            data.Files = dt.files\r\n\t            for(var n=0;n<data.Files.length;n++) {\r\n\t                var file = data.Files[n]\r\n\t                file.getText = function(cb) {\r\n\t                    readTextFile(file, 'readAsText', cb)\r\n\t                }\r\n\t                file.getBuffer = function(cb) {\r\n\t                    readTextFile(file, 'readAsArrayBuffer', cb)\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            attachGetter(data, dt, type)\r\n\t            var mappedType = mapToCamelCase(type)\r\n\t            if(mappedType !== type) {\r\n\t                attachGetter(data, dt, mappedType)\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    return data\r\n\t}\r\n\t\r\n\tfunction attachGetter(data, dt, type) {\r\n\t    Object.defineProperty(data, type, {\r\n\t        enumerable: true,\r\n\t        get: function() {\r\n\t            return dt.getData(type)\r\n\t        }\r\n\t    })\r\n\t}\r\n\t\r\n\tfunction mapToCamelCase(string) {\r\n\t    return string.replace(/(-[a-z])/g, function(match, submatch) {\r\n\t        return submatch[1].toUpperCase()\r\n\t    })\r\n\t}\r\n\t\r\n\t// returns true if the point intersects the element's bounds, false otherwise\r\n\tfunction pointerIsOver(x,y, element) {\r\n\t    var bounds = element.getBoundingClientRect()\r\n\t    return bounds.top <= y&&y <= bounds.bottom\r\n\t        && bounds.left <= x&&x <= bounds.right\r\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\r\n\t// node - The dom node to set as a drag handle\r\n\t// options\r\n\t    // image - Can take on one of the following possible values:\r\n\t        // false - (Default) No image\r\n\t        // true - The default generated drag image\r\n\t        // string - The path to an image\r\n\t        // imageObject - If this is an Image object, that will be used\r\n\t    // start(setData, e) - Called when dragging starts. Use setData to set the data for each type.\r\n\t        // setData(type, data) - Sets data for a particular type.\r\n\t            // NOTE: In an attempt mitigate type lowercasing weirdness, capitals will be converted to dash-lowercase *and* lowercase without dashes\r\n\t            // IE NOTE: IE is a piece of shit and doesn't allow any 'type' other than \"text\" and \"url\" - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/329509/\r\n\t    // move(pointerPosition, e)\r\n\t    // end(e)\r\n\tvar drag = module.exports = function(node, options) {\r\n\t    if(!options) options = {}\r\n\t    node.setAttribute(\"draggable\", \"true\")\r\n\t\r\n\t    var dragInfo = {node:node}\r\n\t    if(options.start) {\r\n\t        node.addEventListener('dragstart', dragInfo.start = function(e) {\r\n\t            if(options.image !== undefined) {\r\n\t                if(options.image !== true) { // if its true, leave the default drag image\r\n\t                    if(typeof(options.image) === 'string') {\r\n\t                        var image = new Image(options.image)\r\n\t                    } else {\r\n\t                        var image = options.image\r\n\t                    }\r\n\t\r\n\t                    e.dataTransfer.setDragImage(image, image.width,image.height)\r\n\t                }\r\n\t            } else {\r\n\t                e.dataTransfer.setDragImage(new Image, 0,0) // no image\r\n\t            }\r\n\t\r\n\t            var dataTransfer = e.dataTransfer\r\n\t            var effectAllowed = options.start(function(type, string) {\r\n\t                dataTransfer.setData(type, string)\r\n\t                var mappedType = mapFromCamelCase(type)\r\n\t                if(mappedType !== type) {\r\n\t                    dataTransfer.setData(mappedType, string)\r\n\t                }\r\n\t            }, e)\r\n\t\r\n\t            if(effectAllowed) e.dataTransfer.effectAllowed = effectAllowed\r\n\t\r\n\t            if(options.move) {\r\n\t                var recentMousePos\r\n\t                document.addEventListener('dragover', dragInfo.docOver = function(e) {\r\n\t                    if(recentMousePos === undefined || e.pageX !== recentMousePos.x || e.pageY !== recentMousePos.y) {\r\n\t                        recentMousePos = {x:e.pageX,  y:e.pageY}\r\n\t                        options.move(e)\r\n\t                    }\r\n\t                }, true)\r\n\t\r\n\t                node.addEventListener('dragend', function dragendHandler() {\r\n\t                    document.removeEventListener('dragover', dragInfo.docOver, true)\r\n\t                    dragInfo.node.removeEventListener('dragend', dragendHandler)\r\n\t                })\r\n\t            }\r\n\t        })\r\n\t    }\r\n\t\r\n\t    if(options.end) {\r\n\t        node.addEventListener('dragend', dragInfo.end = options.end)\r\n\t    }\r\n\t\r\n\t    return function off() {\r\n\t        if(dragInfo.start) dragInfo.node.removeEventListener('dragstart', dragInfo.start)\r\n\t        if(dragInfo.end) dragInfo.node.removeEventListener('dragend', dragInfo.end)\r\n\t        if(dragInfo.docOver) document.removeEventListener('dragover', dragInfo.docOver, true)\r\n\t    }\r\n\t}\r\n\t\r\n\tfunction mapFromCamelCase(string) {\r\n\t    return string.replace(/([A-Z])/g, function(match, submatch) {          // this is from jss\r\n\t        return '-' + submatch.toLowerCase()\r\n\t    })\r\n\t}\n\n/***/ }\n/******/ ])\n});\n\n\n\n/** WEBPACK FOOTER **\n ** dripDrop.umd.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 53776c87b264600cb920\n **/","exports.drop = require('./drop')\r\nexports.drag = require('./drag')\r\n\r\nexports.dontPreventDefault = function() {\r\n    document.removeEventListener('dragenter', docEnterHandler, true)\r\n    document.removeEventListener('dragover', docOverHandler, true)\r\n}\r\n\r\n\r\n// returns an opaque clone of the passed dom node ready to be moved with moveToMouse\r\nexports.ghostItem = function(domNode, zIndex) {\r\n    if(zIndex === undefined) zIndex = 1000\r\n\r\n    var aClone = domNode.cloneNode(true)\r\n    aClone.style.position = 'absolute'\r\n    aClone.style.top = '-100px'\r\n    aClone.style.width = domNode.clientWidth+'px'\r\n    aClone.style.opacity = '.6'\r\n    aClone.style.pointerEvents = 'none' // makes this 'invisible' to mouse events so it doesn't block mouse events while you're dragging it around\r\n    aClone.style['z-index'] = zIndex\r\n\r\n    return aClone\r\n}\r\n// moves an absolutely positioned element to the position by x and y\r\nexports.moveAbsoluteNode = function(node, x, y) {\r\n    node.style.left = x+'px'\r\n    node.style.top = y+'px'\r\n}\r\n\r\n// get rid of the need to do this for other drag events\r\nvar docEnterHandler, docOverHandler;\r\ndocument.addEventListener('dragenter',docEnterHandler=function(e){\r\n    e.preventDefault()\r\n}, true)\r\ndocument.addEventListener('dragover',docOverHandler=function(e){\r\n    e.preventDefault()\r\n}, true)\r\n//document.addEventListener('dragstart',docOverHandler=function(e){\r\n//    e.preventDefault()\r\n//})\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./drip-drop/drip-drop.js\n ** module id = 0\n ** module chunks = 0\n **/","\r\n// node - The node to set up as a drop zone\r\n// options - An object with the optional members:\r\n    // allow - A list of types to allow the event handlers be called for.\r\n            // If this is passed and the current drag operation doesn't have an allowed type, the handlers will not be called.\r\n            // If this isn't passed, all types are allowed.\r\n    // enter(types, e) - A function called when a drag action enters the node\r\n        // types - The data types available on drop\r\n    // move(types, e) - A function called with the dragging pointer moves over the node\r\n        // IMPORTANT: 'data' will contain the correct keys, but will *not* actually contain any data. Blame the stupid html5 drag and drop api.\r\n    // leave(types, e) - A function called with the dragging pointer moves out of the node\r\n    // in(types, e) - A function called when the dragging pointer crosses in over a child-boundary of a descendant node that is also a drop zone \r\n    // out(types, e) - A function called when the dragging pointer crosses out over a child-boundary of a descendant node that is also a drop zone\r\n    // drop(data, e) - A function called when the dragging pointer releases above the node\r\n        // data - An object where each key is a data type, where if that type contains dashes, the type will be available as is *and* with dash-lowercase converted to camel case\r\n            // The value is either:\r\n             // For the 'Files' type, the value is a list of files, each with a set of properties described here: https://developer.mozilla.org/en-US/docs/Web/API/File .\r\n              // In addition, the files have the methods:\r\n                // getText(errback) - Returns the text of the file in a call to the the errback\r\n                // getBuffer(errback) - Returns a Buffer of the file contents in a call to the the errback\r\n             // For any other type, the value is a string of data in a format depending on the type\r\nvar drop = module.exports = function(node, options) {\r\n    if(options.allow) {\r\n        var allowed = options.allow\r\n        var isAllowed = function(types) {\r\n            for(var n=0; n<allowed.length; n++) {\r\n                if(types.indexOf(allowed[n]) !== -1) {\r\n                    return true\r\n                }\r\n            }\r\n            return false\r\n        }\r\n    } else {\r\n        var isAllowed = function() {\r\n            return true\r\n        }\r\n    }\r\n\r\n    var dropInfo = {node:node}, curTypes, dragCounter = 0\r\n    node.addEventListener('dragenter', dropInfo.enter = function(e) {\r\n        dragCounter++\r\n        if(dragCounter === 1) { // browsers stupidly emits dragenter whenever crossing over a child boundary..\r\n            var data = buildDataObject(e.dataTransfer)\r\n            curTypes = Object.keys(data)\r\n            if(options.enter !== undefined && isAllowed(curTypes)) {\r\n                options.enter(curTypes,e)\r\n            }\r\n        } else if(options.in) {\r\n            options.in(curTypes, e)\r\n        }\r\n    })\r\n    if(options.move) {\r\n        var recentMousePos, dropEffect = 'copy', stopPropCalled;\r\n        node.addEventListener('dragover', dropInfo.over = function(e) {\r\n            var originalStopProp = e.stopPropagation\r\n            e.stopPropagation = function() {\r\n                stopPropCalled = true\r\n            }\r\n            \r\n            if(recentMousePos === undefined || e.pageX !== recentMousePos.x || e.pageY !== recentMousePos.y) {\r\n                recentMousePos = {x:e.pageX,  y:e.pageY}\r\n                if(isAllowed(curTypes)) {\r\n                    stopPropCalled = false\r\n                    dropEffect = options.move(curTypes, e)\r\n                }\r\n            }\r\n\r\n            if(dropEffect) e.dataTransfer.dropEffect=dropEffect\r\n            if(stopPropCalled) {\r\n                originalStopProp.call(e)\r\n            }\r\n        })\r\n    }\r\n\r\n    node.addEventListener('dragleave', dropInfo.leave = function(e) {\r\n        dragCounter--\r\n        if(dragCounter === 0) { // browsers stupidly emits dragleave whenever crossing over a child boundary..\r\n            if(options.leave && isAllowed(curTypes))\r\n                options.leave(curTypes,e)\r\n        } else if(options.out) {\r\n            options.out(curTypes, e)\r\n        }\r\n    })\r\n    if(options.drop) {\r\n        node.addEventListener('drop', dropInfo.drop = function(e) {\r\n            e.preventDefault()\r\n            if(isAllowed(curTypes)) {\r\n                var data = buildDataObject(e.dataTransfer)\r\n                options.drop(data, e)\r\n            }\r\n\r\n            dragCounter=0 // reset\r\n        })\r\n    }\r\n\r\n    return function(dropInfo) {\r\n        if(dropInfo.enter) dropInfo.node.removeEventListener('dragstart', dropInfo.start)\r\n        if(dropInfo.move) document.removeEventListener('dragover', dropInfo.docover)\r\n        if(dropInfo.leave) dropInfo.node.removeEventListener('dragend', dropInfo.end)\r\n        if(dropInfo.drop) dropInfo.node.removeEventListener('drop', dropInfo.drop)\r\n    }\r\n}\r\n\r\nfunction readTextFile(file, type, cb){\r\n    var reader=new FileReader()\r\n    reader.onloadend=function(e) {\r\n        if(e.target.readyState==FileReader.DONE){\r\n            cb(undefined, reader.result)\r\n        }\r\n    }\r\n    reader.onerror = function(e) {\r\n        cb(e)\r\n    }\r\n    reader[type](file)\r\n}\r\n\r\nfunction buildDataObject(dt) {\r\n    var data = {}\r\n    if(dt.files.length > 0) {\r\n        data.Files = dt.files\r\n    }\r\n    for(var j=0; j<dt.types.length; j++) {\r\n        var type = dt.types[j]\r\n        if(type === 'Files') {\r\n            data.Files = dt.files\r\n            for(var n=0;n<data.Files.length;n++) {\r\n                var file = data.Files[n]\r\n                file.getText = function(cb) {\r\n                    readTextFile(file, 'readAsText', cb)\r\n                }\r\n                file.getBuffer = function(cb) {\r\n                    readTextFile(file, 'readAsArrayBuffer', cb)\r\n                }\r\n            }\r\n        } else {\r\n            attachGetter(data, dt, type)\r\n            var mappedType = mapToCamelCase(type)\r\n            if(mappedType !== type) {\r\n                attachGetter(data, dt, mappedType)\r\n            }\r\n        }\r\n    }\r\n\r\n    return data\r\n}\r\n\r\nfunction attachGetter(data, dt, type) {\r\n    Object.defineProperty(data, type, {\r\n        enumerable: true,\r\n        get: function() {\r\n            return dt.getData(type)\r\n        }\r\n    })\r\n}\r\n\r\nfunction mapToCamelCase(string) {\r\n    return string.replace(/(-[a-z])/g, function(match, submatch) {\r\n        return submatch[1].toUpperCase()\r\n    })\r\n}\r\n\r\n// returns true if the point intersects the element's bounds, false otherwise\r\nfunction pointerIsOver(x,y, element) {\r\n    var bounds = element.getBoundingClientRect()\r\n    return bounds.top <= y&&y <= bounds.bottom\r\n        && bounds.left <= x&&x <= bounds.right\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./drip-drop/drop.js\n ** module id = 1\n ** module chunks = 0\n **/","\r\n// node - The dom node to set as a drag handle\r\n// options\r\n    // image - Can take on one of the following possible values:\r\n        // false - (Default) No image\r\n        // true - The default generated drag image\r\n        // string - The path to an image\r\n        // imageObject - If this is an Image object, that will be used\r\n    // start(setData, e) - Called when dragging starts. Use setData to set the data for each type.\r\n        // setData(type, data) - Sets data for a particular type.\r\n            // NOTE: In an attempt mitigate type lowercasing weirdness, capitals will be converted to dash-lowercase *and* lowercase without dashes\r\n            // IE NOTE: IE is a piece of shit and doesn't allow any 'type' other than \"text\" and \"url\" - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/329509/\r\n    // move(pointerPosition, e)\r\n    // end(e)\r\nvar drag = module.exports = function(node, options) {\r\n    if(!options) options = {}\r\n    node.setAttribute(\"draggable\", \"true\")\r\n\r\n    var dragInfo = {node:node}\r\n    if(options.start) {\r\n        node.addEventListener('dragstart', dragInfo.start = function(e) {\r\n            if(options.image !== undefined) {\r\n                if(options.image !== true) { // if its true, leave the default drag image\r\n                    if(typeof(options.image) === 'string') {\r\n                        var image = new Image(options.image)\r\n                    } else {\r\n                        var image = options.image\r\n                    }\r\n\r\n                    e.dataTransfer.setDragImage(image, image.width,image.height)\r\n                }\r\n            } else {\r\n                e.dataTransfer.setDragImage(new Image, 0,0) // no image\r\n            }\r\n\r\n            var dataTransfer = e.dataTransfer\r\n            var effectAllowed = options.start(function(type, string) {\r\n                dataTransfer.setData(type, string)\r\n                var mappedType = mapFromCamelCase(type)\r\n                if(mappedType !== type) {\r\n                    dataTransfer.setData(mappedType, string)\r\n                }\r\n            }, e)\r\n\r\n            if(effectAllowed) e.dataTransfer.effectAllowed = effectAllowed\r\n\r\n            if(options.move) {\r\n                var recentMousePos\r\n                document.addEventListener('dragover', dragInfo.docOver = function(e) {\r\n                    if(recentMousePos === undefined || e.pageX !== recentMousePos.x || e.pageY !== recentMousePos.y) {\r\n                        recentMousePos = {x:e.pageX,  y:e.pageY}\r\n                        options.move(e)\r\n                    }\r\n                }, true)\r\n\r\n                node.addEventListener('dragend', function dragendHandler() {\r\n                    document.removeEventListener('dragover', dragInfo.docOver, true)\r\n                    dragInfo.node.removeEventListener('dragend', dragendHandler)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if(options.end) {\r\n        node.addEventListener('dragend', dragInfo.end = options.end)\r\n    }\r\n\r\n    return function off() {\r\n        if(dragInfo.start) dragInfo.node.removeEventListener('dragstart', dragInfo.start)\r\n        if(dragInfo.end) dragInfo.node.removeEventListener('dragend', dragInfo.end)\r\n        if(dragInfo.docOver) document.removeEventListener('dragover', dragInfo.docOver, true)\r\n    }\r\n}\r\n\r\nfunction mapFromCamelCase(string) {\r\n    return string.replace(/([A-Z])/g, function(match, submatch) {          // this is from jss\r\n        return '-' + submatch.toLowerCase()\r\n    })\r\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./drip-drop/drag.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}